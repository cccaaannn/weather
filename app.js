(()=>{"use strict";const e=class{static capitalize(e){return(e=e.toLowerCase()).charAt(0).toUpperCase()+e.slice(1)}static convertTemp(e,t){return n=this,i=void 0,s=function*(){return"F"===t?e=9*e/5-459.67:e-=272.15,e.toLocaleString("en-US",{maximumFractionDigits:1})},new((a=void 0)||(a=Promise))((function(e,t){function o(e){try{c(s.next(e))}catch(e){t(e)}}function r(e){try{c(s.throw(e))}catch(e){t(e)}}function c(t){var n;t.done?e(t.value):(n=t.value,n instanceof a?n:new a((function(e){e(n)}))).then(o,r)}c((s=s.apply(n,i||[])).next())}));var n,i,a,s}};const t=document.getElementById("temp_unit"),n=(document.getElementById("tempUnitC"),document.getElementById("tempUnitF")),i=document.getElementById("city"),a=document.getElementById("update"),s=document.getElementById("update_time");let o;document.addEventListener("DOMContentLoaded",(function(){"serviceWorker"in navigator&&navigator.serviceWorker.register("/sw.js",{scope:"/"}).then((e=>{})).catch((e=>{console.log("service worker can not registered"),console.log(e)})),d.setFormInfo(c.getFromStorage()),a.checked&&(o=setInterval(p,1e3*parseInt(s.value)*60)),p()})),t.addEventListener("change",p),i.addEventListener("change",p),a.addEventListener("change",m),s.addEventListener("change",m);const r=new class{constructor(e){this.apiBase="https://api.openweathermap.org/data/2.5/weather?appid="+e,this.imageLinkBase="https://openweathermap.org/img/wn/"}getWeatherData(t,n){return i=this,a=void 0,o=function*(){const i=this.apiBase+"&q="+t,a=yield fetch(i),s=yield a.json();let o=s.main.temp;o=yield e.convertTemp(parseInt(o),n);let r=s.main.temp_min;r=yield e.convertTemp(parseInt(r),n);let c=s.main.temp_max;c=yield e.convertTemp(parseInt(c),n);let d=s.main.feels_like;d=yield e.convertTemp(parseInt(d),n);let m=s.main.pressure,p=s.main.humidity,h=s.wind.speed,l=s.weather[0].description,u=this.imageLinkBase+s.weather[0].icon+".png";return{city:t,temp:o,tempMin:r,tempMax:c,feelsLike:d,tempUnit:n,pressure:m,humidity:p,speed:h,description:l,imageLink:u}},new((s=void 0)||(s=Promise))((function(e,t){function n(e){try{c(o.next(e))}catch(e){t(e)}}function r(e){try{c(o.throw(e))}catch(e){t(e)}}function c(t){var i;t.done?e(t.value):(i=t.value,i instanceof s?i:new s((function(e){e(i)}))).then(n,r)}c((o=o.apply(i,a||[])).next())}));var i,a,s,o}}("8f8b404261804f45ab9d948fa7409f0d"),c=new class{constructor(e,t){this.saveName=e,this.defaultItems=t}setToStorage(e){localStorage.setItem(this.saveName,JSON.stringify(e))}getFromStorage(){let e,t=localStorage.getItem(this.saveName);return e=null===t?this.defaultItems:JSON.parse(t),e}}("weatherData",{city:"istanbul",tempUnit:"C",autoUpdate:!0,updateTime:5}),d=new class{constructor(e){this.tempUnitC=document.getElementById("tempUnitC"),this.tempUnitF=document.getElementById("tempUnitF"),this.cityTextArea=document.getElementById("city"),this.updateCheckBox=document.getElementById("update"),this.updateTimeSelectBox=document.getElementById("update_time"),this.header_div=document.getElementById("header_div"),this.temp_div=document.getElementById("temp_div"),this.other_weather_info_div=document.getElementById("other_weather_info_div"),this.update_times=e,this.addUpdateTimes()}updateWeather(t){document.title=e.capitalize(t.city)+" "+t.temp+"°"+t.tempUnit,this.header_div.innerHTML=`\n            <h1 class="display-4" id="header">${e.capitalize(t.city)} ${t.temp}°${t.tempUnit}</h1>\n            <h1 class="display-4" id="header"></h1>\n            <h2>\n                ${e.capitalize(t.description)}\n                <img src="${t.imageLink}">\n            </h2>\n        `,this.temp_div.innerHTML=`\n            Min: ${t.tempMin}°${t.tempUnit}\n            <br>\n            Max: ${t.tempMax}°${t.tempUnit}\n            <br>\n            Feels like: ${t.feelsLike}°${t.tempUnit}\n        `,this.other_weather_info_div.innerHTML=`\n            Humidity: ${t.humidity}%\n            <br>\n            Wind: ${t.speed} m/s\n            <br>            \n            Pressure: ${t.pressure} hPa \n        `}addUpdateTimes(){for(var e in this.update_times)this.updateTimeSelectBox.innerHTML+=`\n                <option value="${this.update_times[e]}">${this.update_times[e]}</option>\n            `}setFormInfo(e){this.cityTextArea.value=e.city,"F"===e.tempUnit?this.tempUnitF.checked=!0:this.tempUnitC.checked=!0,this.updateCheckBox.checked=e.autoUpdate,this.updateTimeSelectBox.value=e.updateTime.toString()}getFormInfo(){let e={city:this.cityTextArea.value,tempUnit:"C",autoUpdate:this.updateCheckBox.checked,updateTime:parseInt(this.updateTimeSelectBox.value)};return this.tempUnitF.checked&&(e.tempUnit="F"),e}displayToastMessages(e,t,n){const i=document.createElement("div");i.className=`alert alert-${e}`,i.textContent=n,document.getElementById("message_div").appendChild(i),window.setTimeout((function(){i.remove()}),1e3*t)}}(["1","2","3","4","5","10","15","20","30","60"]);function m(){a.checked?(clearInterval(o),o=setInterval(p,1e3*parseInt(s.value)*60)):clearInterval(o),c.setToStorage(d.getFormInfo()),d.displayToastMessages("success",1,"Saved")}function p(){let e="C";n.checked&&(e="F");const t=i.value;r.getWeatherData(t,e).then((e=>{console.log(e),c.setToStorage(d.getFormInfo()),d.updateWeather(e),d.displayToastMessages("success",1,"Updated")})).catch((e=>{d.displayToastMessages("error",2,"Can not find the city")}))}})();